<?php
 class Login_Model extends CI_Model{

  public function login_valid($username,$password){
  	$this->db->select('int_user_id,txt_user_name,int_group_id');
  	$q=$this->db->where(['txt_user_name'=>$username,'txt_password'=>$password])->get('tab_users');
  	if($q->num_rows())
        {
            return $abc=$q->result_array();
  	}
        else
        {
            return FALSE;
  	}
  }

  public function plan_of_client(){
       $q = $this->db->query("select int_plan_id ,txt_plan_name from tab_plans where int_is_deleted!=1");
       return $data = $q->result_array();
 }

  public function client_type(){
      $q=$this->db->query("select * from tab_user_group");
      return $data =$q->result_array();
  }

  public function client_list(){
      $q=$this->db->query("SELECT P.txt_plan_name, C.* from tab_clients as C inner join tab_plans as P on C.txt_plan_of_client=P.int_plan_id where C.int_is_deleted=0");
      return $data =$q->result_array();
  }

  public function insert_client_data($int_user_id){
      $target_dir = "upload/client/";
      $target_file = $target_dir . basename($_FILES["txt_logo"]["name"]);
      $uploadOk = 1;
      $imageFileType = pathinfo($target_file,PATHINFO_EXTENSION);
      if($imageFileType == "jpg" || $imageFileType == "png" || $imageFileType == "jpeg" || $imageFileType == "gif" ) {
      move_uploaded_file($_FILES["txt_logo"]["tmp_name"], $target_file);    
      /*AUTOGENERATED PASSWORD FOR tab_clients */
      $seed = str_split('abcdefghijklmnopqrstuvwxyz'.'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.'0123456789!@#$%^&*'); 
      shuffle($seed); 
      $rand = '';
      foreach (array_rand($seed, 8) as $k)
      {
	    $rand .= $seed[$k];
      }
      /*AUTOGENERATED USERNAME FOR tab_clients */
      $seed1 = str_split('0123456789'); 
      shuffle($seed1); 
      $username = '';
      foreach (array_rand($seed1, 4) as $k)
      {
           $username .= $seed1[$k];
      }	
        /*INSERTING DATA INTO tab_users*/
        $data1 = array(
        'txt_user_name' => substr($this->input->post('client_name'),0,4)."_".$username,
        'txt_password' =>$rand, 
        'int_group_id' => '2',
        'dt_date' => date('Y-m-d',strtotime($this->input->post('date'))));
	 $query=$this->db->insert("tab_users",$data1);
         /*INSERTING DATA INTO tab_clients */
  	 $data = array(
         'txt_client_name' => $this->input->post('client_name'),
         'txt_plan_of_client' => $this->input->post('plan_of_client'),
	 'txt_mobile' => $this->input->post('client_phone'),
	 'txt_client_type' => $this->input->post('txt_type'),
	 'txt_no_of_member' => $this->input->post('no_of_member'),
	 'txt_client_email' => $this->input->post('txt_client_email'),
         'txt_added_by' => $int_user_id,
	 'txt_client_address'=>$this->input->post('txt_address'),
	 'txt_gender'=>$this->input->post('txt_gender'),
	 'txt_client_logo'=>$target_file,
         'dt_date' => date('Y-m-d',strtotime($this->input->post('date'))));
	  return $query1=$this->db->insert("tab_clients",$data); 
        } 
					
     }
	
  public function update_client_data($int_user_id)
        {
           if($_FILES["txt_logo"]["name"]!='')
           {
            $target_dir = "upload/client/";
            $target_file = $target_dir . basename($_FILES["txt_logo"]["name"]);
            $uploadOk = 1;
            $imageFileType = pathinfo($target_file,PATHINFO_EXTENSION);
            if($imageFileType == "jpg" || $imageFileType == "png" || $imageFileType == "jpeg" || $imageFileType == "gif" )
            {
              move_uploaded_file($_FILES["txt_logo"]["tmp_name"], $target_file);    
              $data = array(  
              'txt_client_name' => $this->input->post('txt_client_name'),
              'txt_mobile' => $this->input->post('client_phone'),
              'txt_client_email' => $this->input->post('txt_client_email'),
              'txt_plan_of_client' => $this->input->post('plan_of_client'),
              'txt_client_type' => $this->input->post('txt_type'),
              'txt_no_of_member' => $this->input->post('no_of_member'),
              'txt_client_address'=>$this->input->post('txt_address'),
              'txt_gender'=>$this->input->post('txt_gender'),
              'txt_client_logo'=>$target_file,
              'dt_date' => date('Y-m-d',strtotime($this->input->post('date'))));
               $this->db->where('txt_added_by',$int_user_id);
               $this->db->where('int_client_id',$this->input->post('user_id'));
               return $this->db->update("tab_clients",$data);
            }
          }
	  else
	  {
		$data = array(  
                'txt_client_name' => $this->input->post('txt_client_name'),
		'txt_mobile' => $this->input->post('client_phone'),
		'txt_client_email' => $this->input->post('txt_client_email'),
                'txt_plan_of_client' => $this->input->post('plan_of_client'),
                'txt_client_type' => $this->input->post('txt_type'),
                'txt_no_of_member' => $this->input->post('no_of_member'),
		'txt_client_address'=>$this->input->post('txt_address'),
                'txt_gender'=>$this->input->post('txt_gender'),
                'dt_date' => date('Y-m-d',strtotime($this->input->post('date'))));
                $this->db->where('txt_added_by',$int_user_id);
                $this->db->where('int_client_id',$this->input->post('user_id'));
                return $this->db->update("tab_clients",$data);
	  }
           
  }

  public function get_client($id){    
                $query=$this->db->query("SELECT * FROM tab_clients WHERE int_client_id = $id");
                return $query->row_array();
    }
	
  
  public function delete_client($id,$int_user_id){
      $sql="update tab_clients SET int_is_deleted=1 where int_client_id=$id and txt_added_by=$int_user_id";
      $query=$this->db->query($sql);
    }

    public function record($user)
    {
        $id=$user[0]['int_user_id'];
        $query=$this->db->query("select * from tab_users where int_user_id=$id");
        return $query->row_array();
    }
    public function password_change($user)
    {
        $id=$user;
       // echo $id;die;
        $select_query="Select * from tab_users where int_user_id=$id";
        $query=$this->db->query($select_query);
        $select_result=$query->row_array();
        $new_password=$this->input->post('new_password');
        if($select_result['txt_password']==$this->input->post('old_password'))
        {
            $update_query="update tab_users SET txt_password='$new_password' where int_user_id=$id";
           $query_update=$this->db->query($update_query);
        }
        else
        {
            echo "invalid user";exit;
        }
       //echo "<script>alert('password updated..!')</script>";
    }
	
}
?>
